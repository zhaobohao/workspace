
#set($voPackage=$package.Entity.replace("entity","vo"))package $!{voPackage};

import $!{package.Entity}.$!{entity};
#if($!{entityLombokModel})
import lombok.*;
#end
#if($!{swagger2})
import io.swagger.annotations.ApiModel;
#end

/**
 * $!{table.comment}视图实体类
 *
 * @author zhaobohao
 * @since $!{date}
 */
#if($!{entityLombokModel})
@Data
@Accessors(chain = true)
@EqualsAndHashCode(callSuper = true)
@Builder
@NoArgsConstructor
@ToString
#end
#if($!{swagger2})
@ApiModel(value = "$!{entity}VO对象", description = #if ("$!{table.comment}"=="")"$!{entity}VO对象"#else"$!{table.comment}"#end)
#end
public class $!{entity}VO extends $!{entity}
#foreach($field in $!{table.fields})
#if($!{field.name}=="parent_id")
    implements INode
#end
#end
{
    private static final long serialVersionUID = 1L;
#foreach($field in $!{table.fields})
    #if($!{field.name}=="parent_id")
        /**
       * 主键ID
       */
        @JsonSerialize(using= ToStringSerializer.class)
        private Long id;

        /**
         * 父节点ID
         */
        @JsonSerialize(using= ToStringSerializer.class)
        private Long parentId;

        /**
         * 子孙节点
         */
        @JsonInclude(JsonInclude.Include.NON_EMPTY)
        private List<INode> children;

        @Override
        public List<INode> getChildren() {
            if (this.children == null) {
                this.children = new ArrayList<>();
            }
            return this.children;
        }
        /**
         * 是否是叶子节点
         */
        protected Integer isLeaf;

        @Override
        public Integer IsLeaf() {
            return Integer.valueOf(isLeaf);
        }
    #end
#end
}

